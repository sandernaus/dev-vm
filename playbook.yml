---

- name: Configure Vagrant box
  hosts:
  - all
  tasks:
    - name: Verify if .secret.yml exists
      stat:
        path: /vagrant/.secret.yml
      register: secret

    - name: Include custom specific vars
      include_vars: /vagrant/.secret.yml
      when: secret.stat.exists is defined and secret.stat.exists

    - name: Import key for Microsoft packages
      rpm_key:
        state: present
        key: https://packages.microsoft.com/keys/microsoft.asc
      become: true

    - name: Add Azure CLI repository
      yum_repository:
        name: azure-cli
        description: Azure CLI
        file: azure-cli
        baseurl: https://packages.microsoft.com/yumrepos/azure-cli
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        enabled: true
      become: true

    - name: Add Powershell Core repository
      yum_repository:
        name: packages-microsoft-com-prod
        description: Microsoft Repository
        baseurl: https://packages.microsoft.com/rhel/7/prod/
        enabled: true
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
      become: true

    - name: Install epel repo
      yum:
        name: epel-release
        state: present
      become: true

    - name: Install packages
      yum:
        name: "{{ yum_packages }}"
        state: present
      become: true

    - name: Configure SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regex: ^(# *)?{{ item }}"
        line: "{{ item.setting }} {{ item.value }}"
        mode: 0600
      notify: restart_ssh
      become: true
      with_items:
        - setting: X11Forwarding
          value: "yes"
        - setting: X11UseLocalhost
          value: "no"
        - setting: PasswordAuthentication
          value: "yes"

    - name: Download packer zip
      get_url:
        url: https://releases.hashicorp.com/packer/1.6.0/packer_1.6.0_linux_amd64.zip
        dest: /tmp/packer_1.6.0_linux_amd64.zip

    - name: Extract packer in /tmp dir
      unarchive:
        src: /tmp/packer_1.6.0_linux_amd64.zip
        dest: /tmp
        mode: 0666

    - name: Copy files from tmp to /usr/local/bin for packer
      copy:
        src: /tmp/packer
        dest: /usr/local/bin/packer
        remote_src: true
        mode: 0755
      become: true

    - name: Cleanup packer zip
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /tmp/packer_1.6.0_linux_amd64.zip
        - /tmp/packer

    - name: Start the docker engine
      systemd:
        name: docker
        state: started
        enabled: true
      become: true

    - name: Install pip packages
      pip:
        name: "{{ pip_packages }}"
        executable: pip3
      become: true

    - name: Install powershell modules
      command: /usr/bin/pwsh -c Install-Module "{{ item }}" -AllowClobber -Force
      with_items: "{{ pwsh_modules }}"

    - name: Configure sshuttle
      template:
        src: sshuttle.conf.j2
        dest: /etc/sshuttle.conf
        mode: 0644
      become: true
      notify: restart_sshuttle
      when:
        - sshuttle_subnets is defined
        - sshuttle_subnets | length > 0

    - name: Create Unit file for sshuttle
      template:
        src: sshuttle.service.j2
        dest: /etc/systemd/system/sshuttle.service
        mode: 0644
      become: true
      when:
        - remote_sshuttle_host is defined
        - remote_sshuttle_host | length > 0

    - name: Start the sshuttle service
      systemd:
        name: sshuttle
        state: started
        enabled: true
        daemon_reload: true
      become: true
      when:
        - remote_sshuttle_host is defined
        - remote_sshuttle_host | length > 0

    - name: check SSH Key exists
      stat:
        path: /home/vagrant/.ssh/id_rsa
      register: ssh_result

    - name: generate SSH key (non-existance of SSH key)
      shell: echo y | ssh-keygen -t rsa -f /home/vagrant/.ssh/id_rsa -N ''
      when: not ssh_result.stat.exists
      changed_when: false
      ignore_errors: true

    - name: distribute SSH key
      authorized_key:
        user: vagrant
        state: present
        manage_dir: true
        key: "{{ lookup('file', '/home/vagrant/.ssh/id_rsa.pub') }}"

    - name: Turn off SE linux
      selinux:
        state: disabled
      become: true

    - name: Create docker group
      group:
        name: docker
        state: present
      become: true
      notify: restart_docker

    - name: add vagrant user to docker group
      user:
        append: true
        groups: docker
        name: vagrant
      become: true

    - name: reset ssh connection
      meta: reset_connection

    - name: Configure docker
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
        mode: 0644
      become: true
      notify: restart_docker
      when:
        - insecure_registries is defined
        - insecure_registries | length > 0

    - name: Stop firewalld
      service:
        name: firewalld
        state: stopped
        enabled: false
      become: true

    - name: Set default configuration for Ansible
      ini_file:
        path: /etc/ansible/ansible.cfg
        section: "{{ item.0.section }}"
        option: "{{ item.1.key }}"
        value: "{{ item.1.value }}"
      become: true
      loop: "{{ ansible_cfg|subelements('settings') }}"

    - name: Check if ZSH is installed
      command: /usr/local/bin/zsh --version
      register: zsh_check
      ignore_errors: true

    - name: Clone the ZSH repo to build the installer locally
      git:
        repo: 'https://github.com/zsh-users/zsh.git'
        dest: /tmp/zsh
        version: zsh-5.8
      when:
        - zsh_check.failed or zsh_check.stdout.split(' ')[1] != '5.8'

    - name: Build and install ZSH from source
      shell:
        cmd: "{{ item }}"
        chdir: /tmp/zsh
      become: true
      ignore_errors: true
      loop:
        - ./Util/preconfig
        - ./configure --with-tcsetpgrp
        - make -j 20 install
      when:
        - zsh_check.failed or zsh_check.stdout.split(' ')[1] != '5.8'

    - name: change user shell to zsh
      become: yes
      user:
        name: vagrant
        shell: /usr/local/bin/zsh

    - name: Check if oh-my-zsh is installed
      stat:
        path: /home/vagrant/.oh-my-zsh
      register: oh_my_zsh_status

    - name: Download oh my zsh installer
      get_url:
        url: https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh
        dest: /tmp/zsh-installer.sh
        mode: '0755'
      when:
        - not oh_my_zsh_status.stat.exists

    - name: Execute the zsh-installer.sh
      shell:
        cmd: ./zsh-installer.sh --unattended
        chdir: /tmp/
      when:
        - not oh_my_zsh_status.stat.exists

    - name: Remove the zsh-installer.sh
      file:
        path: /tmp/zsh-installer.sh
        state: absent
      when:
        - not oh_my_zsh_status.stat.exists

    - name: Clone the Powerlevel10k theme repo
      git:
        repo: 'https://github.com/romkatv/powerlevel10k.git'
        dest: "/home/vagrant/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1

    - name: Set the correct theme for ZSH
      lineinfile:
        path: ~/.zshrc
        regexp: '^ZSH_THEME=.*'
        line: ZSH_THEME=powerlevel10k\/powerlevel10k
        mode: '0644'

  handlers:
    - name: restart_docker
      service:
        name: docker
        state: restarted
      become: true

    - name: restart_sshuttle
      service:
        name: sshuttle
        state: restarted
      become: true
      when:
        - remote_sshuttle_host is defined
        - remote_sshuttle_host | length > 0

    - name: restart_ssh
      service:
        name: sshd
        state: restarted
      become: true
